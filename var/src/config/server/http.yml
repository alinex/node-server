# Configuration for http server
# =================================================


# Server Connections
# -------------------------------------------------
# This is list of labels with their connections to bind to. SWith this you
# have the ability to listen on multiple connections. You may connect your apps
# with specific labels, vhost and context paths.

# ### Host
#
# Hostname or IP address to bind server to.

# ### Port
#
# Set the port the server is listening on.
#
# To use a privileged port below 1024 you have to bind it using root privileges.
# This may be critical.
# The following three methods are possible to do this securely:
#
# 1.  Use sudo to start the server and change back to the normal user
#     after port binding.
#
# 2.  Use ip-tables to forward to an unprivileged port:
#     `sudo iptables -t nat -A PREROUTING -p tcp --dport 80 -j REDIRECT --to-ports 3000`
#
# 3.  Use Nginx reverse-proxy on port 80 this helps also if you may run other
#     things on port 80, too.
#
# 4.  Give Normal user capability of using sockets as root
#     sudo apt-get install libcap2-bin
#     sudo setcap cap_net_bind_service=+ep `readlink -f \`which node\``
#
# Keep in mind to use different ports for different services like HTTP and
# HTTPS. Defaults to port 23174 if not set.

# ### TLS
#
# The settings to use an SSL encryption on this connections:
#
# - pfx - PKCS#12 certificate containing certificate, private key and CA
#   certificates to use for SSL
# - cert - public x509 certificate to use
# - key - private key to use for SSL
# - passphrase - passphrase for the private key or pfx if necessary
# - ca - authority certificate or array of authority certificates to check
#   the remote host against"
# - ciphers - string describing the ciphers to use or exclude
#   (http://www.openssl.org/docs/apps/ciphers.html#CIPHER_LIST_FORMAT)"
# - rejectUnauthorized - lag to check server certificate against the list of
#   supplied CAs
# - secureProtocol - SSL method to use, e.g. TLSv1_method to force TLS version 1
#  (the possible values depend on your installation of OpenSSL and
#  are defined in the constant SSL_METHODS)"

# ### Load
#
# The load settings will result in rejection of incoming requests with an
# "HTTP Server Timeout (503)" response if they are reached:
#
# - maxHeap - maximum V8 heap size
# - maxRss - maximum process RSS size
# - eventLoopDelay - maximum event loop delay duration in milliseconds
listen:

  default:
    #host: localhost
    port: <<<env://PORT | 23174>>>

# Log Settings
# -------------------------------------------------
log:

  - data: combined
    file:
      filename: access.log
      datePattern: .yyyy-MM-dd
      compress: true

  - data: error
    file:
      filename: error.log
      maxSize: 100MB
      compress: true





# ### trust proxy
# Indicate that the app is sitting behind a front-facing proxy, and the X-Forwarded-*
# headers may be trusted for determining the connection and the IP address of
# the client. It must, however, be noted that, the X-Forwarded-* headers are
# easily spoofed and the detected IP addresses are unreliable.
#trustProxy: false

# ### Server nodes
# If set this will define how much nodes to start. 0 means no cluster support
# running with one process. 1 means cluster support running with one forked node
# which will be restarted from the master on kill. And higher values mean more
# nodes but not more will be used than the number of cpu cores.
#nodes: 0

# Access restrictions
# -------------------------------------------------
# The following restrictions are possible:
#
# - `ip` give an ip address or list of addresses

# ### Whitelist
# To only allow access from specific clients they have to be listed here:
#allow:
#  ip:

# ### Blacklist
# To disallow access from specific clients list them here:
#disallow:
#  ip:


# Session handling
# -------------------------------------------------
#session:
  # The secret is used to hash the session with HMAC. The session is then
  # protected against session hijacking by checking the fingerprint against the
  # hash with the secret.
  #secret: R4FCaOCutWGN.GfVym9ag3yyPM
  # After the following time of inactivity (no server request) the session will
  # be outdated.
  #expire: 3600s
